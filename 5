Git 태그와 브랜치 요약
1. 버전과 태그
버전 (Version)
프로그램의 수정 및 개선을 식별하는 번호.
예시: 1.0, 2.1.4, 2.39.0
태그 (Tag)
특정 커밋에 이름(버전)을 부여.
형식: v1.4.0
태그 명령어
주석 태그 생성:

bash
코드 복사
git tag -a v1.0.0 -m 'first version'
작성자, 시각, 메시지 포함.
일반 태그 생성:

bash
코드 복사
git tag v1.0.1
태그 이름만 포함.
태그 목록 확인:

bash
코드 복사
git tag
태그 정보 보기:

bash
코드 복사
git show v1.0.0
태그 삭제:

bash
코드 복사
git tag -d v1.0.0
이전 커밋에 태그 추가:

bash
코드 복사
git tag -a v1.0.0 [커밋ID] -m 'version message'
2. 브랜치 (Branch)
브랜치 개념
프로젝트를 여러 갈래로 나눠 독립적으로 작업 가능.
HEAD: 작업 중인 브랜치의 최신 커밋을 가리킴.
브랜치의 장점
독립된 작업 환경 제공:
새로운 기능 개발.
버그 수정.
실험적인 코드 작성.
기본 브랜치
기본 브랜치 이름: main
설정:
bash
코드 복사
git config --global init.defaultBranch main
브랜치 관리 명령어
브랜치 생성:

생성만:
bash
코드 복사
git branch bname
생성 후 이동:
bash
코드 복사
git switch -c bname
git checkout -b bname
브랜치 목록 확인:

bash
코드 복사
git branch
git branch -v
브랜치 이동:

특정 브랜치 이동:
bash
코드 복사
git switch bname
git checkout bname
이전 브랜치 이동:
bash
코드 복사
git switch -
git checkout -
브랜치 삭제:

병합된 브랜치 삭제:
bash
코드 복사
git branch -d bname
병합되지 않은 브랜치 강제 삭제:
bash
코드 복사
git branch -D bname
로그 그래프 보기:

bash
코드 복사
git log --oneline --graph --all
3. 실습 예시
브랜치 생성 및 관리
bash
코드 복사
git branch new-branch
git switch -c new-branch
git log --oneline
태그 활용
bash
코드 복사
git tag -a v1.0.0 -m "Initial version"
git tag
git show v1.0.0
